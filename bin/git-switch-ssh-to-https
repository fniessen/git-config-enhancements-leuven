#!/usr/bin/env bash

# Convert Git remote URL from SSH to HTTPS.

# Define the site to use (GitHub or Bitbucket).  Default to GitHub if no site is
# specified.
SITE=${1-github.com}

# Define the remote to use.  Default to origin if no remote is specified.
REMOTE=${2-origin}

# Get the current remote URL.
OLD_URL=$(git remote -v | awk -v REMOTE="$REMOTE" '$1==REMOTE && $3=="(push)" {print $2}')

# Check if the old URL is valid.
if [[ -z "$OLD_URL" ]]; then
    printf >&2 "Error: Could not identify Repo URL. It's possible that the repo is already using HTTPS instead of SSH.\n"
    exit 2
fi

# Get the repository owner and name.
REPO_OWNER=$(echo "$OLD_URL" | sed -Ene"s#git@$SITE[^:]*:([^/]*)/(.*).git#\1#p")
REPO_SLUG=$(echo "$OLD_URL" | sed -Ene"s#git@$SITE[^:]*:([^/]*)/(.*).git#\2#p")

# Check if the repo owner and name are valid.
if [[ -z "$REPO_OWNER" ]] || [[ -z "$REPO_SLUG" ]]; then
    printf >&2 "Error: Could not identify Repo Owner or Slug.\n"
    exit 2
fi

# Create the new HTTPS URL.
NEW_URL="https://$SITE/$REPO_OWNER/$REPO_SLUG.git"

# Print the current and new URL for confirmation.
printf "Current remote repository URL:\n %s\n" "$OLD_URL"
printf "New remote repository URL:\n %s\n\n" "$NEW_URL"

# Ask for confirmation before updating the remote URL.
read -p "Do you want to update the remote repository URL? (y/n) " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    # Update the remote URL.
    git remote set-url $REMOTE $NEW_URL
    printf "\nSuccess: Remote repository URL updated\n"
else
    printf "\nCancelled: Remote repository URL not updated\n"
fi
