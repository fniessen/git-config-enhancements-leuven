#!/bin/bash
#-- Script to automate https://help.github.com/articles/why-is-git-always-asking-for-my-password
# Forked from the original to do the opposite:  Switch ssh repo urls to https
# Original here: https://gist.github.com/m14t/3056747
# Thanks to @m14t

SITE=github.com
# SITE=bitbucket.org

# origin or upstream
REMOTE=${1-origin}

# Get the old URL.
OLD_URL=$(git remote -v | grep -m1 "^$REMOTE" | sed -Ene"s#.*(git@$SITE[^:]*:[^[:space:]]*).*#\1#p")

# Check if the old URL is valid.
if [[ -z "$OLD_URL" ]]; then
    printf "Error: Could not identify Repo URL. It's possible that the repo is already using HTTPS instead of SSH.\n"
    exit
fi
printf "OLD_URL: %s\n" "$OLD_URL"

# Get the repo owner and slug.
REPO_OWNER=$(echo "$OLD_URL" | sed -Ene"s#git@$SITE[^:]*:([^/]*)/(.*).git#\1#p")
REPO_SLUG=$(echo "$OLD_URL" | sed -Ene"s#git@$SITE[^:]*:([^/]*)/(.*).git#\2#p")

# Check if the repo owner and slug are valid.
if [[ -z "$REPO_OWNER" ]] || [[ -z "$REPO_SLUG" ]]; then
    printf "Error: Could not identify Repo Owner or Slug.\n"
    exit
fi
printf "REPO_OWNER: %s\n" "$REPO_OWNER"
printf "REPO_SLUG: %s\n" "$REPO_SLUG"

# Create the new URL.
NEW_URL="https://$SITE/$REPO_OWNER/$REPO_SLUG.git"
printf "Changing Repo URL from:\n"
printf " '%s'\n" "$OLD_URL"
printf " to:\n"
printf " '%s'\n" "$NEW_URL"
printf "\n"

# Update the remote URL.
CHANGE_CMD="git remote set-url $REMOTE $NEW_URL"
printf "%s\n" "$CHANGE_CMD"
$CHANGE_CMD

printf "Success\n"
