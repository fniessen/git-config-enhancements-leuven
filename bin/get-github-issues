#!/usr/bin/env bash

#? get-github-issues, Time-stamp: <2024-10-04 Fri 15:10>
#? Copyright (C) 2024 Fabrice Niessen
#?
#? License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
#? This is free software: you are free to change and redistribute it.
#? There is NO WARRANTY, to the extent permitted by law.

##? Usage: get-github-issues [options]

config_file="$HOME/.secret/github-config"

# Source the configuration file.
if [ -f "$config_file" ]; then
    source "$config_file"
else
    printf >&2 "Error: Configuration file '%s' not found.\n" "$config_file"
    exit 2
fi

# Check if required environment variable is set.
if [ -z "$GITHUB_TOKEN" ]; then
    printf >&2 "Error: GITHUB_TOKEN environment variable must be set.\n"
    exit 2
fi

# Get the remote URL for the 'origin' remote.
remote_url=$(git remote get-url origin)

# Extract the owner and repo names from the URL using text manipulation.
owner_and_repo=$(echo "$remote_url" | sed -n 's#.*github.com[:/]\([^/]\+\)/\([^/]\+\)\.git#\1/\2#p')

# Check if the extraction was unsuccessful.
if [ -z "$owner_and_repo" ]; then
    echo "Failed to extract owner and repo names from the Git remote URL."
fi

# GitHub API URL for fetching issues.
API_URL="https://api.github.com/repos/$owner_and_repo/issues"

# Make the HTTP GET request to fetch issues.
curl -s -H "Authorization: token $GITHUB_TOKEN" "$API_URL" \
    | jq -r '.[] | "Issue #" + (.number | tostring) + " - " + .title'
