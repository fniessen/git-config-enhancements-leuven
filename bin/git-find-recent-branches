#!/usr/bin/env bash

#? git-find-recent-branches, Time-stamp: 20221102.1443
#? Copyright (C) 2024 Fabrice Niessen
#?
#? License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
#? This is free software: you are free to change and redistribute it.
#? There is NO WARRANTY, to the extent permitted by law.

##? Usage: git-find-recent-branches [options] [THRESHOLD]
##?
##? Find Git branches modified recently.
##?
##? Arguments:
##?   THRESHOLD                     specify the threshold in days [default: 7].
##?
##? Options:
##?   -h, --help                    display this help and exit
##?   -V, --version                 display version information and exit

# Set -uo pipefail for undefined variable check and pipeline failure propagation.
set -uo pipefail

# Check if docopts command is available.
if ! command -v docopts > /dev/null 2>&1; then
    printf >&2 'Error: docopts command not found.\n'
    exit 2
fi

# Extract help and version information from the script.
help=$(grep "^##?" "$0" | cut -c 5-)
version=$(grep "^#?" "$0" | cut -c 4-)

# Get command-line arguments.
args="$(docopts -h "$help" -V "$version" : "$@")"
eval "$args"

# Set -e to exit on non-zero command status.
set -e

# Set the threshold.
THRESHOLD=${1:-7}

# Convert threshold to date format.
threshold_date=$(date -d "$THRESHOLD days ago" +%Y-%m-%d)

# Fetch remote branches and filter by last commit date.
git fetch --prune
branches=$(git for-each-ref --sort='-committerdate' --format='%(refname:short)' refs/remotes | grep -v HEAD)

# Loop through branches and check if they've been modified within the threshold days.
for branch in $branches; do
    last_commit_info=$(git show -s --format='%ci' $branch | head -n 1)
    last_commit_date=$(echo "$last_commit_info" | awk '{print $1}')
    last_commit_time=$(echo "$last_commit_info" | awk '{print $2}')
    author=$(git show -s --format='%an' $branch | head -n 1)
    last_commit_date=$(date -d "$last_commit_date" +%Y-%m-%d)
    day_of_week=$(date -d "$last_commit_date" "+%a")
    last_commit_time=$(date -d "$last_commit_time" "+%H:%M")
    timestamp="\e[32m$last_commit_date $day_of_week $last_commit_time\e[0m"
    author="\e[34m<$author>\e[0m"
    branch="\e[1;31m$branch\e[0m"
    if [[ "$last_commit_date" > "$threshold_date" ]]; then
        echo -e "$timestamp - Branch $branch $author"
    fi
done
