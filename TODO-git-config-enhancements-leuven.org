# Hey Emacs, this is a -*- org -*- file ...
#+TITLE:     TODO

#+SETUPFILE: ~/org/theme-bigblow.setup

* Tasks

** TODO Fix alias 'delete-gone-branches'

#+begin_src shell
$ g br
2025-01-08 * stack-2/jira/UBSW-1248 [gone] f76520a2f UBSW-1248 <Catalin Purice>
2025-01-08   stack-2/feature/UBSW-1122 [behind 39] 835ef1c72 [UBSW-1121, CFMD-686] Add missing USE to the script <Loicq GrÃ©gory>
2024-12-23   stack-2/develop [behind 24] 1c9e52889 Revert AD auth commits <aremis_b_timmerman>
2024-12-19   teams-integration  4ea0ac3e1 Merge branch 'stack-2/develop' of bitbucket.org:AREMIS_Version_Control/ubs into teams-integration <Flavio>
2024-11-22   hotfix/UBSW-1171  a486a4e58 UBSW-1107 Fix for pentest Add new license <Flavio>
2024-11-05   feature/UBSW-1134  7f0ca8bb5 UBSW-1134 / CFMD-700 <Flavio>
2024-09-25   UBSW-1082  5520ab3ef UBSW-1082 as asked by Fabrice modify master script and remove new one <SofianeSMAIL>
2024-09-16   BuildingInfo [behind 39] 0e1c55536 Merge branch 'develop' into BuildingInfo <Gregory Loicq>
2024-09-04   staging [behind 1] cc15a7e56 Merge remote-tracking branch 'origin/develop' into develop <Catalin Purice>
2024-08-07   feature/building_access_data_model_and_gwe  8f98ea999 pathway changes by Lucian <f.occhipinti@aremis.com>
2024-02-16   tests-outlook-integration-fni  651e639e4 Add files and settings from Sofiane <Fabrice Niessen>

fni@BENB-163:~/1-Clients/ubs/ubs-stack-2 (stack-2/jira/UBSW-1248 *dirty ?untracked)
$ g delete-gone-branches
Deleting gone branches:
error: branch '*' not found
123
#+end_src

** TODO Use white bold on red background color for the 'upstream track' param in alias 'br'

** BitBucket API

https://rdrr.io/github/rgray1/bbcodelibrary/src/R/callapi.R (using curl)
https://medium.com/dataseries/how-to-make-your-own-bitbucket-app-b2c79c9bf99

** MAYB See function teachgit in https://github.com/matthewmccullough/dotfiles/blob/master/shellactivities

** MAYB CircleCI: Continuous Integration and Delivery

* Notes

#+begin_tip
*Commit early, commit often* (and with the right message): it is a bad idea to do
a lot of work without committing... But don't push every single commit: push
when changes are tested!
#+end_tip

Branch out often.
http://kentnguyen.com/development/visualized-git-practices-for-team/
(definition of git rebase)

XXX Git-extras (extra commands!)
https://github.com/tj/git-extras/blob/master/Commands.md

XXX Hub (extra commands!)
https://github.com/github/hub/blob/master/share/man/man1/hub.1.md

XXX Git extra commands (and lots of pointers!!!)
https://github.com/unixorn/git-extra-commands

XXX Bitbucket API
https://developer.atlassian.com/bitbucket/api/2/reference/resource/

XXX Bitbucket API client for Browser and Node.js
https://bitbucketjs.netlify.com/
https://bitbucketjs.netlify.com/#api-deploy

XXX
https://help.github.com/en/github/searching-for-information-on-github/

XXX GitLab API
https://docs.gitlab.com/ee/api/
https://python-gitlab.readthedocs.io/en/stable/gl_objects/projects.html#project-releases

XXX GitAlias.com file of many git alias items, including shortcuts, helpers, workflows, etc.
https://github.com/gitalias/gitalias/blob/master/gitalias.txt

XXX Today I learned
https://til.hashrocket.com/git

XXX Visualized Git commands
https://dev.to/lydiahallie/cs-visualized-useful-git-commands-37p1

XXX See https://blog.liip.ch/archive/2015/12/11/git-tips-tricks.html!!!

** TODO Check out other aliases

For aliases and shell/git configuration, a few pearls:

github.com/zsh-users/antigen
with oh-my-zsh/git and others according to your tastes. (love gloga)

grml.org/zsh/

github.com/zsh-users/zsh-autosugge...

github.com/iam4x/zsh-iterm-touchbar

--rebase by default on git pull is comfortable too.

And obviously for those that didn't know it:
learngitbranching.js.org/

- https://gist.github.com/HarshadRanganathan/eb48dd68133054fdd9db2de8b426f411
  (branch edit-description, etc.)
- https://gist.github.com/chrismccoy/8775224
- https://github.com/alikins/gitconfig/blob/master/gitconfig
- https://github.com/GitAlias/gitalias
- https://gist.github.com/jedmao/5053440 (+ example of CSS style on GitHub)

** TODO Look at Git Power Routines [course]

https://www.youtube.com/playlist?list=PLDshL1Z581YYxLsjYwM25HkIYrymXb7H_

** TODO Read about Git

http://marlacorinne.4parkers.com/2012/07/20/git-pull-vs-git-fetch-then-merge/
https://adamcod.es/2014/12/10/git-pull-correct-workflow.html
[[https://bitbucket.org/blog/get-git-guru-gold-with-bitbuckets-glorious-git-guides][Get git guru gold with Bitbucket's glorious git guides]]

** TODO Outsource and include private entries in .gitconfig

Git 1.7.10+ supports this syntax in =.gitconfig=:

#+begin_src conf :tangle no
[include]
    path = /path/to/file
#+end_src

So you can split your gitconfig configurations across multiple files, e.g. you
can have a =.gitconfig= file for your nonsensitive information and a git ignored
=.githubconfig= file containing your private github token.

See http://travisjeffery.com/b/2012/03/using-gits-include-for-private-information-like-github-tokens/

Mix professional and personal Git configurations:

http://monkeypatch.me/blog/mixing-professional-and-personal-git-configurations.html

** TODO Git Quick Start For Emacs Devs

http://www.emacswiki.org/emacs/GitQuickStartForEmacsDevs

** Git the simple guide

http://rogerdudler.github.io/git-guide/

** Git rebase branch

#+begin_src shell :tangle no
git pull --rebase -r origin master
#+end_src

** Comments on branching (from Matthias)

If you have finished your work, feel free to merge the branch into =master= (maybe
you want to rebase your WIP branch before based on =master=):

The following sequence is here very helpful:

1. git checkout master
2. git pull (this makes sure that your local =master= branch matches the remote one)
3. git checkout WIP
4. git rebase master
5. git checkout master
6. git merge WIP

After this, you can delete your local WIP branch and or if you pushed it the
remote one too.
